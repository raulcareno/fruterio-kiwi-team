package model;
// Generated 07-jun-2010 1:17:21 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Empleado generated by hbm2java
 */
@Entity
@Table(name="empleado"
    ,catalog="seee"
)
public class Empleado  implements java.io.Serializable {


     private int idPersona;
     private Cargo cargo;
     private Persona persona;
     private String cuil;
     private Date fechaIngreso;
     private Date fechaBaja;
     private String motivoBaja;
     private Set<Pedidoproductosterminados> pedidoproductosterminadoses = new HashSet<Pedidoproductosterminados>(0);
     private Set<Notificacionreaprovisionamiento> notificacionreaprovisionamientos = new HashSet<Notificacionreaprovisionamiento>(0);
     private Set<Pago> pagos = new HashSet<Pago>(0);

    public Empleado() {
    }

	
    public Empleado(int idPersona, Cargo cargo, Persona persona, String cuil, Date fechaIngreso) {
        this.idPersona = idPersona;
        this.cargo = cargo;
        this.persona = persona;
        this.cuil = cuil;
        this.fechaIngreso = fechaIngreso;
    }
    public Empleado(int idPersona, Cargo cargo, Persona persona, String cuil, Date fechaIngreso, Date fechaBaja, String motivoBaja, Set<Pedidoproductosterminados> pedidoproductosterminadoses, Set<Notificacionreaprovisionamiento> notificacionreaprovisionamientos, Set<Pago> pagos) {
       this.idPersona = idPersona;
       this.cargo = cargo;
       this.persona = persona;
       this.cuil = cuil;
       this.fechaIngreso = fechaIngreso;
       this.fechaBaja = fechaBaja;
       this.motivoBaja = motivoBaja;
       this.pedidoproductosterminadoses = pedidoproductosterminadoses;
       this.notificacionreaprovisionamientos = notificacionreaprovisionamientos;
       this.pagos = pagos;
    }
   
     @Id 
    
    @Column(name="idPersona", unique=true, nullable=false)
    public int getIdPersona() {
        return this.idPersona;
    }
    
    public void setIdPersona(int idPersona) {
        this.idPersona = idPersona;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idCargo", nullable=false)
    public Cargo getCargo() {
        return this.cargo;
    }
    
    public void setCargo(Cargo cargo) {
        this.cargo = cargo;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idPersona", unique=true, nullable=false, insertable=false, updatable=false)
    public Persona getPersona() {
        return this.persona;
    }
    
    public void setPersona(Persona persona) {
        this.persona = persona;
    }
    
    @Column(name="cuil", nullable=false, length=20)
    public String getCuil() {
        return this.cuil;
    }
    
    public void setCuil(String cuil) {
        this.cuil = cuil;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaIngreso", nullable=false, length=10)
    public Date getFechaIngreso() {
        return this.fechaIngreso;
    }
    
    public void setFechaIngreso(Date fechaIngreso) {
        this.fechaIngreso = fechaIngreso;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaBaja", length=10)
    public Date getFechaBaja() {
        return this.fechaBaja;
    }
    
    public void setFechaBaja(Date fechaBaja) {
        this.fechaBaja = fechaBaja;
    }
    
    @Column(name="motivoBaja", length=200)
    public String getMotivoBaja() {
        return this.motivoBaja;
    }
    
    public void setMotivoBaja(String motivoBaja) {
        this.motivoBaja = motivoBaja;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="empleado")
    public Set<Pedidoproductosterminados> getPedidoproductosterminadoses() {
        return this.pedidoproductosterminadoses;
    }
    
    public void setPedidoproductosterminadoses(Set<Pedidoproductosterminados> pedidoproductosterminadoses) {
        this.pedidoproductosterminadoses = pedidoproductosterminadoses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="empleado")
    public Set<Notificacionreaprovisionamiento> getNotificacionreaprovisionamientos() {
        return this.notificacionreaprovisionamientos;
    }
    
    public void setNotificacionreaprovisionamientos(Set<Notificacionreaprovisionamiento> notificacionreaprovisionamientos) {
        this.notificacionreaprovisionamientos = notificacionreaprovisionamientos;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="pagoempleado", catalog="seee", joinColumns = { 
        @JoinColumn(name="idEmpleado", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idPago", unique=true, nullable=false, updatable=false) })
    public Set<Pago> getPagos() {
        return this.pagos;
    }
    
    public void setPagos(Set<Pago> pagos) {
        this.pagos = pagos;
    }




}


