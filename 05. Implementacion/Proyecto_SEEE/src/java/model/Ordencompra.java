package model;
// Generated 07-jun-2010 1:17:21 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ordencompra generated by hbm2java
 */
@Entity
@Table(name="ordencompra"
    ,catalog="seee"
)
public class Ordencompra  implements java.io.Serializable {


     private Integer id;
     private Proveedor proveedor;
     private Estadoordencompra estadoordencompra;
     private Empresatransporte empresatransporteByIdEmpresaTransporteExterior;
     private Empresatransporte empresatransporteByIdEmpresaTransporteInterior;
     private Date fechaPedido;
     private Date fechaEstimadaLlegada;
     private Float otrosGastos;
     private Set<Ordencompraximportacion> ordencompraximportacions = new HashSet<Ordencompraximportacion>(0);
     private Set<Pago> pagos = new HashSet<Pago>(0);

    public Ordencompra() {
    }

	
    public Ordencompra(Estadoordencompra estadoordencompra, Date fechaPedido) {
        this.estadoordencompra = estadoordencompra;
        this.fechaPedido = fechaPedido;
    }
    public Ordencompra(Proveedor proveedor, Estadoordencompra estadoordencompra, Empresatransporte empresatransporteByIdEmpresaTransporteExterior, Empresatransporte empresatransporteByIdEmpresaTransporteInterior, Date fechaPedido, Date fechaEstimadaLlegada, Float otrosGastos, Set<Ordencompraximportacion> ordencompraximportacions, Set<Pago> pagos) {
       this.proveedor = proveedor;
       this.estadoordencompra = estadoordencompra;
       this.empresatransporteByIdEmpresaTransporteExterior = empresatransporteByIdEmpresaTransporteExterior;
       this.empresatransporteByIdEmpresaTransporteInterior = empresatransporteByIdEmpresaTransporteInterior;
       this.fechaPedido = fechaPedido;
       this.fechaEstimadaLlegada = fechaEstimadaLlegada;
       this.otrosGastos = otrosGastos;
       this.ordencompraximportacions = ordencompraximportacions;
       this.pagos = pagos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idProveedor")
    public Proveedor getProveedor() {
        return this.proveedor;
    }
    
    public void setProveedor(Proveedor proveedor) {
        this.proveedor = proveedor;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idEstadoOrdenCompra", nullable=false)
    public Estadoordencompra getEstadoordencompra() {
        return this.estadoordencompra;
    }
    
    public void setEstadoordencompra(Estadoordencompra estadoordencompra) {
        this.estadoordencompra = estadoordencompra;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idEmpresaTransporteExterior")
    public Empresatransporte getEmpresatransporteByIdEmpresaTransporteExterior() {
        return this.empresatransporteByIdEmpresaTransporteExterior;
    }
    
    public void setEmpresatransporteByIdEmpresaTransporteExterior(Empresatransporte empresatransporteByIdEmpresaTransporteExterior) {
        this.empresatransporteByIdEmpresaTransporteExterior = empresatransporteByIdEmpresaTransporteExterior;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idEmpresaTransporteInterior")
    public Empresatransporte getEmpresatransporteByIdEmpresaTransporteInterior() {
        return this.empresatransporteByIdEmpresaTransporteInterior;
    }
    
    public void setEmpresatransporteByIdEmpresaTransporteInterior(Empresatransporte empresatransporteByIdEmpresaTransporteInterior) {
        this.empresatransporteByIdEmpresaTransporteInterior = empresatransporteByIdEmpresaTransporteInterior;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaPedido", nullable=false, length=10)
    public Date getFechaPedido() {
        return this.fechaPedido;
    }
    
    public void setFechaPedido(Date fechaPedido) {
        this.fechaPedido = fechaPedido;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaEstimadaLlegada", length=10)
    public Date getFechaEstimadaLlegada() {
        return this.fechaEstimadaLlegada;
    }
    
    public void setFechaEstimadaLlegada(Date fechaEstimadaLlegada) {
        this.fechaEstimadaLlegada = fechaEstimadaLlegada;
    }
    
    @Column(name="otrosGastos", precision=9)
    public Float getOtrosGastos() {
        return this.otrosGastos;
    }
    
    public void setOtrosGastos(Float otrosGastos) {
        this.otrosGastos = otrosGastos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="ordencompra")
    public Set<Ordencompraximportacion> getOrdencompraximportacions() {
        return this.ordencompraximportacions;
    }
    
    public void setOrdencompraximportacions(Set<Ordencompraximportacion> ordencompraximportacions) {
        this.ordencompraximportacions = ordencompraximportacions;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="pagoproveedor", catalog="seee", joinColumns = { 
        @JoinColumn(name="idOrdenCompra", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idPago", unique=true, nullable=false, updatable=false) })
    public Set<Pago> getPagos() {
        return this.pagos;
    }
    
    public void setPagos(Set<Pago> pagos) {
        this.pagos = pagos;
    }




}


