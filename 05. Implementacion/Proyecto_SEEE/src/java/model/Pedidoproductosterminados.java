package model;
// Generated 07-jun-2010 1:17:21 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Pedidoproductosterminados generated by hbm2java
 */
@Entity
@Table(name="pedidoproductosterminados"
    ,catalog="seee"
)
public class Pedidoproductosterminados  implements java.io.Serializable {


     private Integer id;
     private Empleado empleado;
     private Empresacliente empresacliente;
     private Estadopedidoproductosterminados estadopedidoproductosterminados;
     private Viajante viajante;
     private Date fechaPedido;
     private Date fechaCancelacion;
     private String motivoEstado;
     private Date fechaEstimadaEntrega;
     private Date fechaEntregaViajante;
     private Float descuento;
     private String domicilioEnvio;
     private Set<Venta> ventas = new HashSet<Venta>(0);
     private Set<Detallepedidoproductosterminados> detallepedidoproductosterminadoses = new HashSet<Detallepedidoproductosterminados>(0);
     private Set<Factura> facturas = new HashSet<Factura>(0);

    public Pedidoproductosterminados() {
    }

	
    public Pedidoproductosterminados(Empleado empleado, Empresacliente empresacliente, Estadopedidoproductosterminados estadopedidoproductosterminados, Viajante viajante, Date fechaPedido) {
        this.empleado = empleado;
        this.empresacliente = empresacliente;
        this.estadopedidoproductosterminados = estadopedidoproductosterminados;
        this.viajante = viajante;
        this.fechaPedido = fechaPedido;
    }
    public Pedidoproductosterminados(Empleado empleado, Empresacliente empresacliente, Estadopedidoproductosterminados estadopedidoproductosterminados, Viajante viajante, Date fechaPedido, Date fechaCancelacion, String motivoEstado, Date fechaEstimadaEntrega, Date fechaEntregaViajante, Float descuento, String domicilioEnvio, Set<Venta> ventas, Set<Detallepedidoproductosterminados> detallepedidoproductosterminadoses, Set<Factura> facturas) {
       this.empleado = empleado;
       this.empresacliente = empresacliente;
       this.estadopedidoproductosterminados = estadopedidoproductosterminados;
       this.viajante = viajante;
       this.fechaPedido = fechaPedido;
       this.fechaCancelacion = fechaCancelacion;
       this.motivoEstado = motivoEstado;
       this.fechaEstimadaEntrega = fechaEstimadaEntrega;
       this.fechaEntregaViajante = fechaEntregaViajante;
       this.descuento = descuento;
       this.domicilioEnvio = domicilioEnvio;
       this.ventas = ventas;
       this.detallepedidoproductosterminadoses = detallepedidoproductosterminadoses;
       this.facturas = facturas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idEmpleado", nullable=false)
    public Empleado getEmpleado() {
        return this.empleado;
    }
    
    public void setEmpleado(Empleado empleado) {
        this.empleado = empleado;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idEmpresaCliente", nullable=false)
    public Empresacliente getEmpresacliente() {
        return this.empresacliente;
    }
    
    public void setEmpresacliente(Empresacliente empresacliente) {
        this.empresacliente = empresacliente;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idEstadoPedidoProductosTerminados", nullable=false)
    public Estadopedidoproductosterminados getEstadopedidoproductosterminados() {
        return this.estadopedidoproductosterminados;
    }
    
    public void setEstadopedidoproductosterminados(Estadopedidoproductosterminados estadopedidoproductosterminados) {
        this.estadopedidoproductosterminados = estadopedidoproductosterminados;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idViajante", nullable=false)
    public Viajante getViajante() {
        return this.viajante;
    }
    
    public void setViajante(Viajante viajante) {
        this.viajante = viajante;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaPedido", nullable=false, length=10)
    public Date getFechaPedido() {
        return this.fechaPedido;
    }
    
    public void setFechaPedido(Date fechaPedido) {
        this.fechaPedido = fechaPedido;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaCancelacion", length=10)
    public Date getFechaCancelacion() {
        return this.fechaCancelacion;
    }
    
    public void setFechaCancelacion(Date fechaCancelacion) {
        this.fechaCancelacion = fechaCancelacion;
    }
    
    @Column(name="motivoEstado", length=20)
    public String getMotivoEstado() {
        return this.motivoEstado;
    }
    
    public void setMotivoEstado(String motivoEstado) {
        this.motivoEstado = motivoEstado;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaEstimadaEntrega", length=10)
    public Date getFechaEstimadaEntrega() {
        return this.fechaEstimadaEntrega;
    }
    
    public void setFechaEstimadaEntrega(Date fechaEstimadaEntrega) {
        this.fechaEstimadaEntrega = fechaEstimadaEntrega;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaEntregaViajante", length=10)
    public Date getFechaEntregaViajante() {
        return this.fechaEntregaViajante;
    }
    
    public void setFechaEntregaViajante(Date fechaEntregaViajante) {
        this.fechaEntregaViajante = fechaEntregaViajante;
    }
    
    @Column(name="descuento", precision=9)
    public Float getDescuento() {
        return this.descuento;
    }
    
    public void setDescuento(Float descuento) {
        this.descuento = descuento;
    }
    
    @Column(name="domicilioEnvio", length=100)
    public String getDomicilioEnvio() {
        return this.domicilioEnvio;
    }
    
    public void setDomicilioEnvio(String domicilioEnvio) {
        this.domicilioEnvio = domicilioEnvio;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="pedidoproductosterminados")
    public Set<Venta> getVentas() {
        return this.ventas;
    }
    
    public void setVentas(Set<Venta> ventas) {
        this.ventas = ventas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="pedidoproductosterminados")
    public Set<Detallepedidoproductosterminados> getDetallepedidoproductosterminadoses() {
        return this.detallepedidoproductosterminadoses;
    }
    
    public void setDetallepedidoproductosterminadoses(Set<Detallepedidoproductosterminados> detallepedidoproductosterminadoses) {
        this.detallepedidoproductosterminadoses = detallepedidoproductosterminadoses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="pedidoproductosterminados")
    public Set<Factura> getFacturas() {
        return this.facturas;
    }
    
    public void setFacturas(Set<Factura> facturas) {
        this.facturas = facturas;
    }




}


