package model;
// Generated 07-jun-2010 1:17:21 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Empresacliente generated by hbm2java
 */
@Entity
@Table(name="empresacliente"
    ,catalog="seee"
)
public class Empresacliente  implements java.io.Serializable {


     private Integer id;
     private Creditocliente creditocliente;
     private Domicilio domicilio;
     private Condicioniva condicioniva;
     private String razonSocial;
     private String cuit;
     private String telefono;
     private String fax;
     private String mail;
     private String celular;
     private Set<Pedidoproductosterminados> pedidoproductosterminadoses = new HashSet<Pedidoproductosterminados>(0);
     private Set<Detallecartera> detallecarteras = new HashSet<Detallecartera>(0);
     private Set<Devolucionproductosterminados> devolucionproductosterminadoses = new HashSet<Devolucionproductosterminados>(0);
     private Set<Empresaclientexpersona> empresaclientexpersonas = new HashSet<Empresaclientexpersona>(0);
     private Set<Detallehojaruta> detallehojarutas = new HashSet<Detallehojaruta>(0);
     private Set<Rentabilidadcliente> rentabilidadclientes = new HashSet<Rentabilidadcliente>(0);

    public Empresacliente() {
    }

	
    public Empresacliente(Creditocliente creditocliente, Domicilio domicilio, Condicioniva condicioniva, String razonSocial, String cuit) {
        this.creditocliente = creditocliente;
        this.domicilio = domicilio;
        this.condicioniva = condicioniva;
        this.razonSocial = razonSocial;
        this.cuit = cuit;
    }
    public Empresacliente(Creditocliente creditocliente, Domicilio domicilio, Condicioniva condicioniva, String razonSocial, String cuit, String telefono, String fax, String mail, String celular, Set<Pedidoproductosterminados> pedidoproductosterminadoses, Set<Detallecartera> detallecarteras, Set<Devolucionproductosterminados> devolucionproductosterminadoses, Set<Empresaclientexpersona> empresaclientexpersonas, Set<Detallehojaruta> detallehojarutas, Set<Rentabilidadcliente> rentabilidadclientes) {
       this.creditocliente = creditocliente;
       this.domicilio = domicilio;
       this.condicioniva = condicioniva;
       this.razonSocial = razonSocial;
       this.cuit = cuit;
       this.telefono = telefono;
       this.fax = fax;
       this.mail = mail;
       this.celular = celular;
       this.pedidoproductosterminadoses = pedidoproductosterminadoses;
       this.detallecarteras = detallecarteras;
       this.devolucionproductosterminadoses = devolucionproductosterminadoses;
       this.empresaclientexpersonas = empresaclientexpersonas;
       this.detallehojarutas = detallehojarutas;
       this.rentabilidadclientes = rentabilidadclientes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idCreditoCliente", nullable=false)
    public Creditocliente getCreditocliente() {
        return this.creditocliente;
    }
    
    public void setCreditocliente(Creditocliente creditocliente) {
        this.creditocliente = creditocliente;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idDomicilio", nullable=false)
    public Domicilio getDomicilio() {
        return this.domicilio;
    }
    
    public void setDomicilio(Domicilio domicilio) {
        this.domicilio = domicilio;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idCondicionIVA", nullable=false)
    public Condicioniva getCondicioniva() {
        return this.condicioniva;
    }
    
    public void setCondicioniva(Condicioniva condicioniva) {
        this.condicioniva = condicioniva;
    }
    
    @Column(name="razonSocial", nullable=false, length=20)
    public String getRazonSocial() {
        return this.razonSocial;
    }
    
    public void setRazonSocial(String razonSocial) {
        this.razonSocial = razonSocial;
    }
    
    @Column(name="cuit", nullable=false, length=20)
    public String getCuit() {
        return this.cuit;
    }
    
    public void setCuit(String cuit) {
        this.cuit = cuit;
    }
    
    @Column(name="telefono", length=20)
    public String getTelefono() {
        return this.telefono;
    }
    
    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }
    
    @Column(name="fax", length=20)
    public String getFax() {
        return this.fax;
    }
    
    public void setFax(String fax) {
        this.fax = fax;
    }
    
    @Column(name="mail", length=30)
    public String getMail() {
        return this.mail;
    }
    
    public void setMail(String mail) {
        this.mail = mail;
    }
    
    @Column(name="celular", length=20)
    public String getCelular() {
        return this.celular;
    }
    
    public void setCelular(String celular) {
        this.celular = celular;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="empresacliente")
    public Set<Pedidoproductosterminados> getPedidoproductosterminadoses() {
        return this.pedidoproductosterminadoses;
    }
    
    public void setPedidoproductosterminadoses(Set<Pedidoproductosterminados> pedidoproductosterminadoses) {
        this.pedidoproductosterminadoses = pedidoproductosterminadoses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="empresacliente")
    public Set<Detallecartera> getDetallecarteras() {
        return this.detallecarteras;
    }
    
    public void setDetallecarteras(Set<Detallecartera> detallecarteras) {
        this.detallecarteras = detallecarteras;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="empresacliente")
    public Set<Devolucionproductosterminados> getDevolucionproductosterminadoses() {
        return this.devolucionproductosterminadoses;
    }
    
    public void setDevolucionproductosterminadoses(Set<Devolucionproductosterminados> devolucionproductosterminadoses) {
        this.devolucionproductosterminadoses = devolucionproductosterminadoses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="empresacliente")
    public Set<Empresaclientexpersona> getEmpresaclientexpersonas() {
        return this.empresaclientexpersonas;
    }
    
    public void setEmpresaclientexpersonas(Set<Empresaclientexpersona> empresaclientexpersonas) {
        this.empresaclientexpersonas = empresaclientexpersonas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="empresacliente")
    public Set<Detallehojaruta> getDetallehojarutas() {
        return this.detallehojarutas;
    }
    
    public void setDetallehojarutas(Set<Detallehojaruta> detallehojarutas) {
        this.detallehojarutas = detallehojarutas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="empresacliente")
    public Set<Rentabilidadcliente> getRentabilidadclientes() {
        return this.rentabilidadclientes;
    }
    
    public void setRentabilidadclientes(Set<Rentabilidadcliente> rentabilidadclientes) {
        this.rentabilidadclientes = rentabilidadclientes;
    }




}


